AWSTemplateFormatVersion: '2010-09-09'
Description: 'TruthByte Lambda Functions'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Environment name
  ArtifactBucket:
    Type: String
    Description: S3 bucket for Lambda deployment packages
  JwtSecret:
    Type: String
    NoEcho: true
    Description: JWT secret key for token signing and verification

Resources:
  FetchQuestionsFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${Environment}-truthbyte-fetch-questions
      Handler: fetch_questions.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref ArtifactBucket
        S3Key: fetch-questions.zip
      Runtime: python3.13
      Timeout: 30
      MemorySize: 256
      ReservedConcurrentExecutions: 2
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          LOG_LEVEL: INFO
          JWT_SECRET: !Ref JwtSecret
          QUESTIONS_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-QuestionsTableName
          QUESTION_CATEGORIES_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-QuestionCategoriesTableName
          CATEGORIES_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-CategoriesTableName
          USERS_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-UsersTableName

  SubmitAnswerFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${Environment}-truthbyte-submit-answers
      Handler: submit_answers.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref ArtifactBucket
        S3Key: submit-answers.zip
      Runtime: python3.13
      Timeout: 30
      MemorySize: 256
      ReservedConcurrentExecutions: 2
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          LOG_LEVEL: INFO
          JWT_SECRET: !Ref JwtSecret
          ANSWERS_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-AnswersTableName
          QUESTIONS_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-QuestionsTableName
          USERS_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-UsersTableName

  ProposeQuestionFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${Environment}-truthbyte-propose-question
      Handler: propose_question.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref ArtifactBucket
        S3Key: propose-question.zip
      Runtime: python3.13
      Timeout: 30
      MemorySize: 256
      ReservedConcurrentExecutions: 2
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          LOG_LEVEL: INFO
          JWT_SECRET: !Ref JwtSecret
          SUBMITTED_QUESTIONS_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-SubmittedQuestionsTableName

  GetTokenFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${Environment}-truthbyte-get-token
      Handler: get_token.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref ArtifactBucket
        S3Key: get-token.zip
      Runtime: python3.13
      Timeout: 30
      MemorySize: 256
      ReservedConcurrentExecutions: 2
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          LOG_LEVEL: INFO
          JWT_SECRET: !Ref JwtSecret

  AuthPingFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${Environment}-truthbyte-auth-ping
      Handler: auth_ping.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref ArtifactBucket
        S3Key: auth-ping.zip
      Runtime: python3.13
      Timeout: 30
      MemorySize: 256
      ReservedConcurrentExecutions: 2
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          LOG_LEVEL: INFO
          JWT_SECRET: !Ref JwtSecret

  GetUserFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${Environment}-truthbyte-get-user
      Handler: get_user.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref ArtifactBucket
        S3Key: get-user.zip
      Runtime: python3.13
      Timeout: 30
      MemorySize: 256
      ReservedConcurrentExecutions: 2
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          LOG_LEVEL: INFO
          JWT_SECRET: !Ref JwtSecret
          USERS_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-UsersTableName

  GetCategoriesFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${Environment}-truthbyte-get-categories
      Handler: get_categories.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref ArtifactBucket
        S3Key: get-categories.zip
      Runtime: python3.13
      Timeout: 30
      MemorySize: 256
      ReservedConcurrentExecutions: 2
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          LOG_LEVEL: INFO
          JWT_SECRET: !Ref JwtSecret
          QUESTION_CATEGORIES_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-QuestionCategoriesTableName
          CATEGORIES_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-CategoriesTableName
          USERS_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-UsersTableName

  GetUserSubmissionsFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${Environment}-truthbyte-get-user-submissions
      Handler: get_user_submissions.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref ArtifactBucket
        S3Key: get-user-submissions.zip
      Runtime: python3.13
      Timeout: 30
      MemorySize: 256
      ReservedConcurrentExecutions: 2
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          LOG_LEVEL: INFO
          JWT_SECRET: !Ref JwtSecret
          SUBMITTED_QUESTIONS_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-SubmittedQuestionsTableName
          USERS_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-UsersTableName

  FetchDailyQuestionsFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${Environment}-truthbyte-fetch-daily-questions
      Handler: fetch_daily_questions.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref ArtifactBucket
        S3Key: fetch-daily-questions.zip
      Runtime: python3.13
      Timeout: 30
      MemorySize: 256
      ReservedConcurrentExecutions: 2
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          LOG_LEVEL: INFO
          JWT_SECRET: !Ref JwtSecret
          QUESTIONS_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-QuestionsTableName
          USERS_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-UsersTableName

  SubmitDailyAnswersFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${Environment}-truthbyte-submit-daily-answers
      Handler: submit_daily_answers.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref ArtifactBucket
        S3Key: submit-daily-answers.zip
      Runtime: python3.13
      Timeout: 30
      MemorySize: 256
      ReservedConcurrentExecutions: 2
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          LOG_LEVEL: INFO
          JWT_SECRET: !Ref JwtSecret
          QUESTIONS_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-QuestionsTableName
          ANSWERS_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-AnswersTableName
          USERS_TABLE_NAME: 
            Fn::ImportValue: 
              Fn::Sub: ${Environment}-UsersTableName

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:DescribeTable
                Resource:
                  - Fn::ImportValue: 
                      Fn::Sub: ${Environment}-QuestionsTableArn
                  - Fn::ImportValue: 
                      Fn::Sub: ${Environment}-QuestionCategoriesTableArn
                  - Fn::ImportValue: 
                      Fn::Sub: ${Environment}-CategoriesTableArn
                  - Fn::ImportValue: 
                      Fn::Sub: ${Environment}-SubmittedQuestionsTableArn
                  - Fn::ImportValue: 
                      Fn::Sub: ${Environment}-AnswersTableArn
                  - Fn::ImportValue: 
                      Fn::Sub: ${Environment}-SessionsTableArn
                  - Fn::ImportValue: 
                      Fn::Sub: ${Environment}-UsersTableArn
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

Outputs:
  FetchQuestionsFunctionArn:
    Description: ARN of the fetch questions Lambda function
    Value: !GetAtt FetchQuestionsFunction.Arn
    Export:
      Name: !Sub ${Environment}-FetchQuestionsFunctionArn

  SubmitAnswerFunctionArn:
    Description: ARN of the submit answer Lambda function
    Value: !GetAtt SubmitAnswerFunction.Arn
    Export:
      Name: !Sub ${Environment}-SubmitAnswerFunctionArn

  ProposeQuestionFunctionArn:
    Description: ARN of the propose question Lambda function
    Value: !GetAtt ProposeQuestionFunction.Arn
    Export:
      Name: !Sub ${Environment}-ProposeQuestionFunctionArn

  GetTokenFunctionArn:
    Description: ARN of the get token Lambda function
    Value: !GetAtt GetTokenFunction.Arn
    Export:
      Name: !Sub ${Environment}-GetTokenFunctionArn

  AuthPingFunctionArn:
    Description: ARN of the auth ping Lambda function
    Value: !GetAtt AuthPingFunction.Arn
    Export:
      Name: !Sub ${Environment}-AuthPingFunctionArn

  GetUserFunctionArn:
    Description: ARN of the get user Lambda function
    Value: !GetAtt GetUserFunction.Arn
    Export:
      Name: !Sub ${Environment}-GetUserFunctionArn

  GetCategoriesFunctionArn:
    Description: ARN of the get categories Lambda function
    Value: !GetAtt GetCategoriesFunction.Arn
    Export:
      Name: !Sub ${Environment}-GetCategoriesFunctionArn

  GetUserSubmissionsFunctionArn:
    Description: ARN of the get user submissions Lambda function
    Value: !GetAtt GetUserSubmissionsFunction.Arn
    Export:
      Name: !Sub ${Environment}-GetUserSubmissionsFunctionArn

  FetchDailyQuestionsFunctionArn:
    Description: ARN of the fetch daily questions Lambda function
    Value: !GetAtt FetchDailyQuestionsFunction.Arn
    Export:
      Name: !Sub ${Environment}-FetchDailyQuestionsFunctionArn

  SubmitDailyAnswersFunctionArn:
    Description: ARN of the submit daily answers Lambda function
    Value: !GetAtt SubmitDailyAnswersFunction.Arn
    Export:
      Name: !Sub ${Environment}-SubmitDailyAnswersFunctionArn 